{"version":3,"sources":["../../API/controllers/mealsController.js"],"names":["validateMeal","meal","schema","name","Joi","string","min","required","Description","price","number","quantity","validate","MealsModel","MealsController","req","res","meals","getMeals","undefined","length","status","send","message","body","error","details","newmeal","createMeal","trim","find","ameal","id","parseInt","params","upmeal","somemeal","mealIndex","indexOf","splice"],"mappings":"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","sourcesContent":["import Joi from 'joi';\r\nimport MealsModel from '../models/mealModel';\r\n\r\nfunction validateMeal(meal) {\r\n  const schema = {\r\n    name: Joi.string().min(2).required(),\r\n    Description: Joi.string().min(5).required(),\r\n    price: Joi.number().required(),\r\n    quantity: Joi.string().required(),\r\n  };\r\n\r\n  return Joi.validate(meal, schema);\r\n}\r\n\r\n\r\nconst meal = new MealsModel();\r\nexport default class MealsController {\r\n  /**\r\n  * Get All Meals\r\n  * @param {object} req\r\n  * @param {object} res\r\n  * @return {object} all meals\r\n  */\r\n  static getAllMeals(req, res) {\r\n    const meals = meal.getMeals();\r\n    if (meals === undefined || meals.length === 0) {\r\n      return res.status(204).send({ message: 'No Meals' });\r\n    }\r\n    return res.status(200).send(meals);\r\n  }\r\n\r\n  /**\r\n   * Create a new meal\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @return {object} created meal || all inputs are required\r\n   */\r\n  static createMeal(req, res) {\r\n    const { error } = validateMeal(req.body);\r\n    if (error) return res.status(400).send(error.details[0].message);\r\n\r\n    const newmeal = meal.createMeal(req.body);\r\n    newmeal.name = req.body.name.trim();\r\n    newmeal.Description = req.body.Description;\r\n    newmeal.price = req.body.price;\r\n    newmeal.quantity = req.body.quantity;\r\n\r\n    return res.status(201).send(newmeal);\r\n  }\r\n\r\n  static getAmeal(req, res) {\r\n    const meals = meal.getMeals();\r\n    const newmeal = meals.find(ameal => ameal.id === parseInt(req.params.id));\r\n    if (!newmeal) return res.status(404).send({ message: 'Meal Not Found' });\r\n    res.status(200).send(newmeal);\r\n  }\r\n\r\n  /**\r\n    * Update meal info\r\n    * @param {object} req\r\n    * @param {object} res\r\n    * @return {object} updated meal\r\n    */\r\n  static updateMeal(req, res) {\r\n    const meals = meal.getMeals();\r\n    const upmeal = meals.find(somemeal => somemeal.id === parseInt(req.params.id));\r\n    if (!upmeal) return res.status(404).send({ message: 'Meal Not Found' });\r\n    const { error } = validateMeal(req.body);\r\n    if (error) return res.status(400).send(error.details[0].message);\r\n    upmeal.name = req.body.name;\r\n    upmeal.Description = req.body.Description;\r\n    upmeal.price = req.body.price;\r\n    upmeal.quantity = req.body.quantity;\r\n    return res.status(200).send(upmeal);\r\n  }\r\n\r\n  /**\r\n    * delete a meal option\r\n    * @param {object} req\r\n    * @param {object} res\r\n    * @return {object} deleted meal || meal not found\r\n    */\r\n  static deleteMeal(req, res) {\r\n    const meals = meal.getMeals();\r\n    const newmeal = meals.find(somemeal => somemeal.id === parseInt(req.params.id));\r\n    if (!newmeal) return res.status(404).send({ message: 'Meal Not found' });\r\n\r\n    const mealIndex = meals.indexOf(newmeal);\r\n    meals.splice(mealIndex, 1);\r\n    return res.status(200).send(newmeal);\r\n  }\r\n}\r\n"],"file":"mealsController.js"}