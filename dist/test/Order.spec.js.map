{"version":3,"sources":["../../API/test/Order.spec.js"],"names":["expect","chai","use","chaiHttp","describe","order","name","Description","price","quantity","it","done","request","app","post","send","end","err","res","statusCode","to","equal","body","be","a","get","an","length","should","eql","put","_id","message"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../index';\r\n\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\ndescribe('API Tests', () => {\r\n  const order = {\r\n    name: 'Beans',\r\n    Description: 'lorem ipsum',\r\n    price: 300,\r\n    quantity: 'large',\r\n  };\r\n\r\n  describe('/POST Order', () => {\r\n    it('it should post an order', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/orders')\r\n        .send(order)\r\n        .end((err, res) => {\r\n          expect(res.statusCode).to.equal(201);\r\n          expect(res.body).to.be.a('object');\r\n          expect(res.body.name).to.be.a('string');\r\n          expect(res.body.Description).to.be.a('string');\r\n          expect(res.body.price).to.be.a('number');\r\n          expect(res.body.quantity).to.be.a('string');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('GET an order', () => {\r\n    it('should GET an order', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/orders')\r\n        .end((err, res) => {\r\n          expect(res.statusCode).to.equal(200);\r\n          expect(res.body).to.be.an('array');\r\n          res.body.length.should.be.eql(4);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('Update an order ', () => {\r\n    it('should return a 404 error if the ID of the order to be update cannot be found', (done) => {\r\n      order.name = 'Rice';\r\n      chai.request(app)\r\n        .put(`/api/v1/orders/${order._id}`)\r\n        .end((err, res) => {\r\n          expect(res.statusCode).to.equal(404);\r\n          expect(res.body.message).to.equal('Order Not Found');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n});\r\n"],"file":"Order.spec.js"}