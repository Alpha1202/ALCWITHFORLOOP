{"version":3,"sources":["../../API/test/meal.spec.js"],"names":["expect","chai","use","chaiHttp","describe","meals","name","Description","price","quantity","it","done","request","app","get","end","err","res","statusCode","to","equal","body","be","an","length","should","eql","post","send","a","_id","message","put","delete"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../index';\r\n\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\ndescribe('API Tests', () => {\r\n  const meals = {\r\n    name: 'Beans',\r\n    Description: 'lorem ipsum',\r\n    price: 300,\r\n    quantity: 'large',\r\n  };\r\n\r\n\r\n  describe('GET all meals', () => {\r\n    it('should GET all the meals', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/meals')\r\n        .end((err, res) => {\r\n          expect(res.statusCode).to.equal(200);\r\n          expect(res.body).to.be.an('array');\r\n          res.body.length.should.be.eql(3);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n\r\n  describe('/POST meal', () => {\r\n    it('it should post a meal', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/meals')\r\n        .send(meals)\r\n        .end((err, res) => {\r\n          expect(res.statusCode).to.equal(201);\r\n          expect(res.body).to.be.a('object');\r\n          expect(res.body.name).to.be.a('string');\r\n          expect(res.body.Description).to.be.a('string');\r\n          expect(res.body.price).to.be.a('number');\r\n          expect(res.body.quantity).to.be.a('string');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n\r\n  describe('Get a meal by id', () => {\r\n    it('it should return a 404 error if the meal.id is not found', (done) => {\r\n      chai.request(app)\r\n        .get(`/api/v1/meals/${meals._id}`)\r\n        .end((err, res) => {\r\n          expect(res.statusCode).to.equal(404);\r\n          expect(res.body.message).to.equal('Meal Not Found');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('Update a meal by id', () => {\r\n    it('should return a 404 error if the ID of the meal to be modified cannot be found', (done) => {\r\n      meals.name = 'Rice';\r\n      chai.request(app)\r\n        .put(`/api/v1/meals/${meals._id}`)\r\n        .end((err, res) => {\r\n          expect(res.statusCode).to.equal(404);\r\n          expect(res.body.message).to.equal('Meal Not Found');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('Delete a meal by id', () => {\r\n    it('should return a 404 error if the ID of the meal to be deleted cannot be found', (done) => {\r\n      chai.request(app)\r\n        .delete(`/api/v1/meals/${meals._id}`)\r\n        .end((err, res) => {\r\n          expect(res.statusCode).to.equal(404);\r\n          expect(res.body.message).to.equal('Meal Not found');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n});\r\n"],"file":"meal.spec.js"}