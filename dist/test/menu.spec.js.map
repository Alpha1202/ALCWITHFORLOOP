{"version":3,"sources":["../../API/test/menu.spec.js"],"names":["expect","chai","use","chaiHttp","describe","menu","name","Description","price","quantity","it","done","request","app","post","send","end","err","res","statusCode","to","equal","body","be","a","get","an","length","should","eql"],"mappings":";;AAAA;;AACA;;AACA;;;;IAGQA,M,GAAWC,a,CAAXD,M;;AACRC,cAAKC,GAAL,CAASC,iBAAT;;AAGAC,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC1B,MAAMC,IAAI,GAAG;AACXC,IAAAA,IAAI,EAAE,OADK;AAEXC,IAAAA,WAAW,EAAE,aAFF;AAGXC,IAAAA,KAAK,EAAE,GAHI;AAIXC,IAAAA,QAAQ,EAAE;AAJC,GAAb;AAQAL,EAAAA,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3BM,IAAAA,EAAE,CAAC,6BAAD,EAAgC,UAACC,IAAD,EAAU;AAC1CV,oBAAKW,OAAL,CAAaC,cAAb,EACGC,IADH,CACQ,cADR,EAEGC,IAFH,CAEQV,IAFR,EAGGW,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,QAAAA,MAAM,CAACkB,GAAG,CAACC,UAAL,CAAN,CAAuBC,EAAvB,CAA0BC,KAA1B,CAAgC,GAAhC;AACArB,QAAAA,MAAM,CAACkB,GAAG,CAACI,IAAL,CAAN,CAAiBF,EAAjB,CAAoBG,EAApB,CAAuBC,CAAvB,CAAyB,QAAzB;AACAxB,QAAAA,MAAM,CAACkB,GAAG,CAACI,IAAJ,CAAShB,IAAV,CAAN,CAAsBc,EAAtB,CAAyBG,EAAzB,CAA4BC,CAA5B,CAA8B,QAA9B;AACAxB,QAAAA,MAAM,CAACkB,GAAG,CAACI,IAAJ,CAASf,WAAV,CAAN,CAA6Ba,EAA7B,CAAgCG,EAAhC,CAAmCC,CAAnC,CAAqC,QAArC;AACAxB,QAAAA,MAAM,CAACkB,GAAG,CAACI,IAAJ,CAASd,KAAV,CAAN,CAAuBY,EAAvB,CAA0BG,EAA1B,CAA6BC,CAA7B,CAA+B,QAA/B;AACAxB,QAAAA,MAAM,CAACkB,GAAG,CAACI,IAAJ,CAASb,QAAV,CAAN,CAA0BW,EAA1B,CAA6BG,EAA7B,CAAgCC,CAAhC,CAAkC,QAAlC;AACAb,QAAAA,IAAI;AACL,OAXH;AAYD,KAbC,CAAF;AAcD,GAfO,CAAR;AAiBAP,EAAAA,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3BM,IAAAA,EAAE,CAAC,qBAAD,EAAwB,UAACC,IAAD,EAAU;AAClCV,oBAAKW,OAAL,CAAaC,cAAb,EACGY,GADH,CACO,cADP,EAEGT,GAFH,CAEO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,QAAAA,MAAM,CAACkB,GAAG,CAACC,UAAL,CAAN,CAAuBC,EAAvB,CAA0BC,KAA1B,CAAgC,GAAhC;AACArB,QAAAA,MAAM,CAACkB,GAAG,CAACI,IAAL,CAAN,CAAiBF,EAAjB,CAAoBG,EAApB,CAAuBG,EAAvB,CAA0B,OAA1B;AACAR,QAAAA,GAAG,CAACI,IAAJ,CAASK,MAAT,CAAgBC,MAAhB,CAAuBL,EAAvB,CAA0BM,GAA1B,CAA8B,CAA9B;AACAlB,QAAAA,IAAI;AACL,OAPH;AAQD,KATC,CAAF;AAUD,GAXO,CAAR;AAYD,CAtCO,CAAR","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../index';\r\n\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\n\r\ndescribe('API Tests', () => {\r\n  const menu = {\r\n    name: 'Beans',\r\n    Description: 'lorem ipsum',\r\n    price: 300,\r\n    quantity: 'large',\r\n  };\r\n\r\n\r\n  describe('/POST menu', () => {\r\n    it('it should create a new menu', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/menu')\r\n        .send(menu)\r\n        .end((err, res) => {\r\n          expect(res.statusCode).to.equal(201);\r\n          expect(res.body).to.be.a('object');\r\n          expect(res.body.name).to.be.a('string');\r\n          expect(res.body.Description).to.be.a('string');\r\n          expect(res.body.price).to.be.a('number');\r\n          expect(res.body.quantity).to.be.a('string');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('GET a menu', () => {\r\n    it('should GET the menu', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/menu')\r\n        .end((err, res) => {\r\n          expect(res.statusCode).to.equal(200);\r\n          expect(res.body).to.be.an('array');\r\n          res.body.length.should.be.eql(4);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n});\r\n"],"file":"menu.spec.js"}