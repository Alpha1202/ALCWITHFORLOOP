{
  "swagger": "2.0",
  "info": {
    "description": "This is xpreschop mealApp API documentation.",
    "version": "1.0.0",
    "title": "XpresChop",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "nzubennamani@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Xpreschop mealApp",
      "description": "Xpreschop meal booking App APIs"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/caterers/auth/signup": {
      "post": {
        "tags": [
          "Caterers"
        ],
        "summary": "Signs up a new caterer",
        "description": "This endpoint uses a post request to register new caterers",
        "consumes": [
          "application/object"
        ],
        "produces": [
          "application/object"
        ],
        "responses": {
          "405": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Caterer"
            }
          }
        }
      }
    },
    "/caterers/auth/login": {
      "post": {
        "tags": [
          "Caterers"
        ],
        "summary": "Logins up an existing caterer",
        "description": "This endpoint uses a post request to login an existing caterers",
        "consumes": [
          "application/object"
        ],
        "produces": [
          "application/object"
        ],
        "responses": {
          "405": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Caterer"
            }
          }
        }
      }
    },
    "/users/auth/signup": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Registers a new user",
        "description": "This endpoint uses a post request to register a new user",
        "consumes": [
          "application/object"
        ],
        "produces": [
          "application/object"
        ],
        "responses": {
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/auth/login/:email": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Logins up an existing user",
        "description": "This endpoint uses a post request to login an existing user",
        "consumes": [
          "application/object"
        ],
        "produces": [
          "application/object"
        ],
        "responses": {
          "405": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/meals": {
      "get": {
        "tags": [
          "meals"
        ],
        "summary": "Gets a meal",
        "description": "This endpoint allows a logged in user to get a meal.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid tag value",
            "schema": {
              "$ref": "#/definitions/Meal"
            }
          }
        }
      },
      "post": {
        "tags": [
          "meals"
        ],
        "summary": "Posts a meal",
        "description": "This endpoint creates a meal object",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found",
            "schema": {
              "$ref": "#/definitions/Meal"
            }
          }
        }
      },
      "put": {
        "tags": [
          "meals"
        ],
        "summary": "Updates a meal",
        "description": "This endpoint updates a meal object",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "405": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Meal"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "meals"
        ],
        "summary": "Deletes a meal",
        "description": "This endpoints deletes a meal object",
        "produces": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found",
            "schema": {
              "$ref": "#/definitions/Meal"
            }
          }
        }
      }
    },
    "/menu": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "Get all menu",
        "description": "This endpoint gets all the menu set by a verified caterer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          }
        }
      },
      "post": {
        "tags": [
          "menu"
        ],
        "summary": "creates a menu",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid Order",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          }
        }
      }
    },
    "/menu/caterer": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "Returns a menu to the caterer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Gets all order",
        "description": "This endpoints gets the order",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      },
      "post": {
        "tags": [
          "order"
        ],
        "summary": "creates a new order",
        "description": "This endpoint creates a new order",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    },
    "/order/name": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "updates an order",
        "description": "This endpoints updates an order",
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "order"
        ],
        "summary": "deletes an order",
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "order": {
          "type": "string"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "address": {
          "type": "string"
        },
        "delivery_status": {
          "type": "integer"
        },
        "catererId": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        }
      }
    },
    "Menu": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "meals": {
          "type": "string"
        },
        "catererId": {
          "type": "integer"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "Caterer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "Meal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "string"
        },
        "catererId": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}